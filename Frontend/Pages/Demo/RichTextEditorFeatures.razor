@page "/richtexteditor-features"
@using Syncfusion.Blazor.RichTextEditor
@using System.ComponentModel.DataAnnotations;
<h2>Rich Text Editor</h2>
<br/>
<div id = "ControlRegion">
  <div class="control-section">
    <div class="control-wrapper">
        <div class="control-section">
            <SfRichTextEditor ShowCharCount="true" EnableResize="true"  MaxLength="2000">
                <ChildContent>
                    <p>The rich text editor is WYSIWYG ('what you see is what you get') editor useful to create and edit content, and return the valid <a href='https://ej2.syncfusion.com/aspnetcore/documentation/rich-text-editor/formation/?no-cache=1#markdown-editor'>HTML markup</a> or <a href='https://ej2.syncfusion.com/aspnetcore/documentation/rich-text-editor/formation/?no-cache=1#html-editor'>markdown</a> of the content</p><b>Toolbar</b><ol><li>Toolbar contains commands to align the text, insert link, insert image, insert list, undo / redo operations, HTML view, etc </li><li>Toolbar is fully customizable </li></ol><b>Links</b><ol><li> You can insert a hyperlink with its corresponding dialog</li><li> Attach a hyperlink to the displayed text. </li><li> Customize the quick toolbar based on the hyperlink </li></ol><b>Image.</b><ol><li> Allows you to insert images from an online source as well as the local computer</li><li> You can upload an image</li><li> Provides an option to customize quick toolbar for an image </li></ol><img alt='Logo' src='RTEImage-Feather.png' style='width: 300px' />
                    <RichTextEditorToolbarSettings Items="@Tools"></RichTextEditorToolbarSettings>
                </ChildContent>
            </SfRichTextEditor>
        </div>
    </div>
</div>
                     </div>
<br/>
<div>
  <h3>Selected Features:</h3>
    <ul class="ulstyle">
      <li class="list"> Rich Text Editor Samples - Overview</li>
      <li class="list"> Enable Resize</li>
      <li class="list"> Show Characters Count</li>
      <li class="list"> Theme - Bootstrap v5</li>
    </ul>
</div>
<br/>
<style>
    .e-code-mirror::before {
        content: '\e345';
    }
    .e-html-preview::before {
        content: '\e350';
    }
    .CodeMirror-linenumber,
    .CodeMirror-gutters {
        display: none;
    }
    .sb-header {
        z-index: 100;
    }
    .ulstyle {
        margin: 0px;
        padding-left: 20px;
        display: inline-block;
    }
    .list {
    float: left;
    line-height: 20px;
    margin: 10px;
    min-width: 350px;
    }
</style>
@code {
    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.StrikeThrough },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.FontName },
        new ToolbarItemModel() { Command = ToolbarCommand.FontSize },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.FontColor },
        new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.LowerCase },
        new ToolbarItemModel() { Command = ToolbarCommand.UpperCase },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.SuperScript },
        new ToolbarItemModel() { Command = ToolbarCommand.SubScript },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Formats },
        new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.OrderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.UnorderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Outdent },
        new ToolbarItemModel() { Command = ToolbarCommand.Indent },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateLink },
        new ToolbarItemModel() { Command = ToolbarCommand.Image },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateTable },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.ClearFormat },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Print },
        new ToolbarItemModel() { Command = ToolbarCommand.SourceCode },
        new ToolbarItemModel() { Command = ToolbarCommand.FullScreen },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Undo },
        new ToolbarItemModel() { Command = ToolbarCommand.Redo }
    };
}
